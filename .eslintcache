[{"/Users/pro2015/development/react-TS/socialnetwork/src/components/Header/Header.tsx":"1","/Users/pro2015/development/react-TS/socialnetwork/src/components/Friends/Friends.tsx":"2","/Users/pro2015/development/react-TS/socialnetwork/src/components/Music/Music.tsx":"3","/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/Message/Message.tsx":"4","/Users/pro2015/development/react-TS/socialnetwork/src/App.tsx":"5","/Users/pro2015/development/react-TS/socialnetwork/src/components/Settings/Settings.tsx":"6","/Users/pro2015/development/react-TS/socialnetwork/src/components/Friends/Friend/Friend.tsx":"7","/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/Dialogs.tsx":"8","/Users/pro2015/development/react-TS/socialnetwork/src/index.tsx":"9","/Users/pro2015/development/react-TS/socialnetwork/src/components/Navbar/Navbar.tsx":"10","/Users/pro2015/development/react-TS/socialnetwork/src/components/News/News.tsx":"11","/Users/pro2015/development/react-TS/socialnetwork/src/redux/dialogs-reducer.ts":"12","/Users/pro2015/development/react-TS/socialnetwork/src/redux/profile-reducer.ts":"13","/Users/pro2015/development/react-TS/socialnetwork/src/redux/redux-store.ts":"14","/Users/pro2015/development/react-TS/socialnetwork/src/redux/sidebar-reducer.ts":"15","/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/DialogsContainer.tsx":"16","/Users/pro2015/development/react-TS/socialnetwork/src/components/Users/UsersContainer.tsx":"17","/Users/pro2015/development/react-TS/socialnetwork/src/redux/users-reducer.ts":"18","/Users/pro2015/development/react-TS/socialnetwork/src/components/Users/Users.tsx":"19","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/MyPostsContainer.tsx":"20","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/MyPosts.tsx":"21","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileContainer.tsx":"22","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/Post/Post.tsx":"23","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx":"24","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/Profile.tsx":"25","/Users/pro2015/development/react-TS/socialnetwork/src/reportWebVitals.ts":"26","/Users/pro2015/development/react-TS/socialnetwork/src/components/common/Preloader/Preloader.tsx":"27","/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/DialogItem/DialogItem.tsx":"28","/Users/pro2015/development/react-TS/socialnetwork/src/redux/auth-reducer.ts":"29","/Users/pro2015/development/react-TS/socialnetwork/src/components/Header/HeaderContainer.tsx":"30","/Users/pro2015/development/react-TS/socialnetwork/src/api/api.ts":"31","/Users/pro2015/development/react-TS/socialnetwork/src/HOC/withAuthRedirect.tsx":"32","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileInfo/ProfileStatus.tsx":"33","/Users/pro2015/development/react-TS/socialnetwork/src/components/Login/Login.tsx":"34","/Users/pro2015/development/react-TS/socialnetwork/src/components/common/FormsControls/FormsControls.tsx":"35","/Users/pro2015/development/react-TS/socialnetwork/src/utils/validators.ts":"36"},{"size":3362,"mtime":1620639846038,"results":"37","hashOfConfig":"38"},{"size":615,"mtime":1615140685435,"results":"39","hashOfConfig":"38"},{"size":125,"mtime":1612543068830,"results":"40","hashOfConfig":"38"},{"size":250,"mtime":1616680431229,"results":"41","hashOfConfig":"38"},{"size":1605,"mtime":1620646459916,"results":"42","hashOfConfig":"38"},{"size":149,"mtime":1615140685425,"results":"43","hashOfConfig":"38"},{"size":313,"mtime":1615140685437,"results":"44","hashOfConfig":"38"},{"size":1839,"mtime":1620503577762,"results":"45","hashOfConfig":"38"},{"size":597,"mtime":1620646086386,"results":"46","hashOfConfig":"38"},{"size":1226,"mtime":1617615884911,"results":"47","hashOfConfig":"38"},{"size":358,"mtime":1612598023775,"results":"48","hashOfConfig":"38"},{"size":1589,"mtime":1620488537869,"results":"49","hashOfConfig":"38"},{"size":2971,"mtime":1620490539268,"results":"50","hashOfConfig":"38"},{"size":1051,"mtime":1620130187811,"results":"51","hashOfConfig":"38"},{"size":271,"mtime":1616768074988,"results":"52","hashOfConfig":"38"},{"size":875,"mtime":1620488537861,"results":"53","hashOfConfig":"38"},{"size":2551,"mtime":1619787208184,"results":"54","hashOfConfig":"38"},{"size":6437,"mtime":1619625430508,"results":"55","hashOfConfig":"38"},{"size":2740,"mtime":1620057115753,"results":"56","hashOfConfig":"38"},{"size":669,"mtime":1620489592728,"results":"57","hashOfConfig":"38"},{"size":1509,"mtime":1620628802573,"results":"58","hashOfConfig":"38"},{"size":1795,"mtime":1620655615022,"results":"59","hashOfConfig":"38"},{"size":523,"mtime":1616680413381,"results":"60","hashOfConfig":"38"},{"size":891,"mtime":1620110886328,"results":"61","hashOfConfig":"38"},{"size":684,"mtime":1620110886314,"results":"62","hashOfConfig":"38"},{"size":425,"mtime":1612104719164,"results":"63","hashOfConfig":"38"},{"size":202,"mtime":1618157819673,"results":"64","hashOfConfig":"38"},{"size":451,"mtime":1616680340531,"results":"65","hashOfConfig":"38"},{"size":1986,"mtime":1620654380207,"results":"66","hashOfConfig":"38"},{"size":914,"mtime":1620639566265,"results":"67","hashOfConfig":"38"},{"size":2230,"mtime":1620649443848,"results":"68","hashOfConfig":"38"},{"size":752,"mtime":1620053797045,"results":"69","hashOfConfig":"38"},{"size":1639,"mtime":1620119953500,"results":"70","hashOfConfig":"38"},{"size":2191,"mtime":1620653019251,"results":"71","hashOfConfig":"38"},{"size":994,"mtime":1620505653941,"results":"72","hashOfConfig":"38"},{"size":601,"mtime":1620494547358,"results":"73","hashOfConfig":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1j7wogt",{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"80"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"80"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"80"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"114","usedDeprecatedRules":"80"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"119"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"119"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"134"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"119"},{"filePath":"138","messages":"139","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"140","usedDeprecatedRules":"80"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"/Users/pro2015/development/react-TS/socialnetwork/src/components/Header/Header.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Friends/Friends.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Music/Music.tsx",[],["157","158"],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/Message/Message.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/App.tsx",["159","160"],"import React from 'react';\nimport './App.css';\nimport {Navbar} from \"./components/Navbar/Navbar\";\nimport {BrowserRouter, HashRouter, Route} from 'react-router-dom';\nimport {News} from \"./components/News/News\";\nimport {Music} from \"./components/Music/Music\";\nimport {Friends} from \"./components/Friends/Friends\";\nimport Settings from \"./components/Settings/Settings\";\nimport DialogsContainer from \"./components/Dialogs/DialogsContainer\";\nimport UsersContainer from \"./components/Users/UsersContainer\";\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\nimport Login from \"./components/Login/Login\";\n\nconst App = () => {\n\n    return (\n        <BrowserRouter>\n            <div className={'app-wrapper'}>\n                <HeaderContainer/>\n                <Navbar/>\n                {/*<Friends dialogs={props.store.getState().dialogPage.dialogs}/>*/}\n                <div className={'app-wrapper-content'}>\n                    <Route path='/dialogs' render={() => <DialogsContainer/>}/>\n                    <Route path='/profile/:userId?' render={() => <ProfileContainer/>}/>\n                    <Route path='/users' render={() => <UsersContainer/> }/>\n                    <Route path='/news' render={() => <News/>}/>\n                    <Route path='/music' render={() => <Music/>}/>\n                    <Route path='/settings' render={() => <Settings/>}/>\n                    <Route path='/login' render={() => <Login/>}/>\n                </div>\n            </div>\n        </BrowserRouter>\n\n    );\n}\n\nexport default App;\n","/Users/pro2015/development/react-TS/socialnetwork/src/components/Settings/Settings.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Friends/Friend/Friend.tsx",["161","162"],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/Dialogs.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/index.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Navbar/Navbar.tsx",["163"],"import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './Navbar.module.css';\nimport {Friends} from \"../Friends/Friends\";\n\nexport const Navbar = () => {\n    return (\n        <nav className={s.nav}>\n            <div className={`${s.item} ${s.active}`}>\n                <NavLink to={\"/profile\"} activeClassName={s.active}>Profile</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/dialogs\"} activeClassName={s.active}>Messages</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/users\"} activeClassName={s.active}>Users</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/news\"} activeClassName={s.active}>News</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/music\"} activeClassName={s.active}>Music</NavLink>\n            </div>\n            <div className={s.item}>\n                <NavLink to={\"/settings\"} activeClassName={s.active}>Settings</NavLink>\n            </div>\n            {/*<div className={s.item}>*/}\n            {/*    <a><h2><Friends/></h2></a>*/}\n            {/*</div>*/}\n\n        </nav>\n    )\n}","/Users/pro2015/development/react-TS/socialnetwork/src/components/News/News.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/redux/dialogs-reducer.ts",[],"/Users/pro2015/development/react-TS/socialnetwork/src/redux/profile-reducer.ts",[],"/Users/pro2015/development/react-TS/socialnetwork/src/redux/redux-store.ts",["164"],"/Users/pro2015/development/react-TS/socialnetwork/src/redux/sidebar-reducer.ts",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/DialogsContainer.tsx",["165"],"import React, {ComponentType} from 'react';\nimport {DialogsInitialStateType, sendMessage} from \"../../redux/dialogs-reducer\";\nimport {Dialogs} from \"./Dialogs\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {connect} from \"react-redux\";\nimport {withAuthRedirect} from \"../../HOC/withAuthRedirect\";\nimport {compose} from \"redux\";\n\ntype MapStatePropsType = {\n    dialogPage: DialogsInitialStateType\n}\ntype MapDispatchPropsType = {\n    updateNewMessageText: (newMessageText: string) => void\n    sendMessage: (newMessageText: string) => void\n}\nexport type DialogsPropsType = MapStatePropsType & MapDispatchPropsType\n\nconst mapStateToProps = (state: AppStateType): MapStatePropsType => {\n    return {\n        dialogPage: state.dialogPage\n    }\n}\n\n\nexport default compose<ComponentType>(\n    connect(mapStateToProps, {sendMessage}),\n    withAuthRedirect\n)(Dialogs)\n\n","/Users/pro2015/development/react-TS/socialnetwork/src/components/Users/UsersContainer.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/redux/users-reducer.ts",["166"],"import {usersAPI} from \"../api/api\";\nimport {AppThunk} from \"./redux-store\";\n\n\nenum USERS_ACTIONS {\n    FOLLOW = 'FOLLOW',\n    UNFOLLOW = 'UNFOLLOW',\n    SET_USERS = 'SET-USERS',\n    SET_CURRENT_PAGE = 'SET-CURRENT-PAGE',\n    SET_TOTAL_USERS_COUNT = 'SET-TOTAL-USERS_COUNT',\n    TOGGLE_IS_FETCHING = 'TOGGLE-IS-FETCHING',\n    TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE-IS-FOLLOWING-PROGRESS',\n}\n\nexport type FollowActionType = ReturnType<typeof followSuccess>\nexport type UnfollowActionType = ReturnType<typeof unFollowSuccess>\nexport type SetUsersActionType = ReturnType<typeof setUsers>\nexport type setCurrentPageActionType = ReturnType<typeof setCurrentPage>\nexport type setTotalUsersCountActionType = ReturnType<typeof setTotalUsersCount>\nexport type setIsFetchingActionType = ReturnType<typeof toggleIsFetching>\nexport type toggleFollowingProgressActionType = ReturnType<typeof toggleFollowingProgress>\n\nexport type UsersActionTypes = FollowActionType | UnfollowActionType | SetUsersActionType | setCurrentPageActionType\n    | setTotalUsersCountActionType | setIsFetchingActionType | toggleFollowingProgressActionType\n\ntype LocationType = {\n    city: string\n    country: string\n}\nexport type UserType = {\n    id: number\n    photos: { [key: string]: string | null }\n    followed: boolean\n    name: string\n    status: string | null\n    location?: LocationType\n}\nexport type UsersInitialStateType = {\n    users: Array<UserType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n\n}\n\nconst initialState: UsersInitialStateType = {\n    users: [],\n    pageSize: 5,\n    totalUsersCount: 21,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: []\n}\n\nconst usersReducer = (state: UsersInitialStateType = initialState, action: UsersActionTypes): UsersInitialStateType => {\n    switch (action.type) {\n        case USERS_ACTIONS.FOLLOW: {\n            return {\n                ...state,\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: true} : u)\n            }\n        }\n        case USERS_ACTIONS.UNFOLLOW: {\n            return {\n                ...state,\n                users: state.users.map(u => u.id === action.userId ? {...u, followed: false} : u)\n            }\n        }\n        case USERS_ACTIONS.SET_USERS: {\n            return {...state, users: action.users}\n        }\n        case USERS_ACTIONS.SET_CURRENT_PAGE: {\n            return {...state, currentPage: action.currentPage}\n        }\n        case USERS_ACTIONS.SET_TOTAL_USERS_COUNT: {\n            return {...state, totalUsersCount: action.totalUsersCount}\n        }\n        case USERS_ACTIONS.TOGGLE_IS_FETCHING: {\n            return {...state, isFetching: action.isFetching}\n        }\n        case USERS_ACTIONS.TOGGLE_IS_FOLLOWING_PROGRESS: {\n            return {\n                ...state,\n                followingInProgress: action.isFetching\n                    ? [...state.followingInProgress, action.userId]\n                    : state.followingInProgress.filter(id => id != action.userId)\n            }\n        }\n        default:\n            return state;\n    }\n}\n\nexport const followSuccess = (userId: number) => ({type: USERS_ACTIONS.FOLLOW, userId} as const)\nexport const unFollowSuccess = (userId: number) => ({type: USERS_ACTIONS.UNFOLLOW, userId} as const)\nexport const setUsers = (users: Array<UserType>) => ({type: USERS_ACTIONS.SET_USERS, users} as const)\nexport const setCurrentPage = (currentPage: number) => ({type: USERS_ACTIONS.SET_CURRENT_PAGE, currentPage} as const)\nexport const setTotalUsersCount = (totalUsersCount: number) => ({type: USERS_ACTIONS.SET_TOTAL_USERS_COUNT, totalUsersCount} as const)\nexport const toggleIsFetching = (isFetching: boolean) => ({type: USERS_ACTIONS.TOGGLE_IS_FETCHING, isFetching} as const)\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number) =>\n    ({type: USERS_ACTIONS.TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId} as const)\n\n\nexport const getUsers = (currentPage: number, pageSize: number): AppThunk => async dispatch => {\n    try {\n        dispatch(toggleIsFetching(true))\n        const res = await usersAPI.getUsers(currentPage, pageSize)\n        dispatch(toggleIsFetching(false))\n        dispatch(setUsers(res.items))\n        dispatch(setTotalUsersCount(res.totalCount))\n    } catch (e) {\n        throw new Error(e)\n    }\n}\n\nexport const follow = (currentPage: number, pageSize: number, userId: number):AppThunk => async dispatch => {\n    try {\n        dispatch(toggleFollowingProgress(true, userId))\n        const res = await usersAPI.follow(userId)\n        if (res.resultCode === 0) {\n            dispatch(followSuccess(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    } catch (e) {\n        throw new Error(e)\n    }\n}\n\nexport const unFollow = (currentPage: number, pageSize: number, userId: number): AppThunk => async dispatch => {\n    try {\n        dispatch(toggleFollowingProgress(true, userId))\n        const res = await usersAPI.unFollow(userId)\n        if (res.resultCode === 0) {\n            dispatch(unFollowSuccess(userId))\n        }\n        dispatch(toggleFollowingProgress(false, userId))\n    } catch (e) {\n        throw new Error(e)\n    }\n}\n\n\n// export const _getUsers = (currentPage: number, pageSize: number): AppThunk => (dispatch) => {\n//     dispatch(toggleIsFetching(true))\n//     usersAPI.getUsers(currentPage, pageSize).then(data => {\n//         dispatch(toggleIsFetching(false))\n//         dispatch(setUsers(data.items))\n//         dispatch(setTotalUsersCount(data.totalCount))\n//     });\n// }\n// export const _follow = (currentPage: number, pageSize: number, userId: number):AppThunk => (dispatch) => {\n//     dispatch(toggleFollowingProgress(true, userId))\n//     usersAPI.follow(userId).then(data => {\n//         if (data.resultCode === 0) {\n//             dispatch(followSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     });\n// }\n// export const _unFollow = (currentPage: number, pageSize: number, userId: number): AppThunk => (dispatch) => {\n//     dispatch(toggleFollowingProgress(true, userId))\n//     usersAPI.unFollow(userId).then(data => {\n//         if (data.resultCode === 0) {\n//             dispatch(unFollowSuccess(userId))\n//         }\n//         dispatch(toggleFollowingProgress(false, userId))\n//     });\n// }\n\n\nexport default usersReducer;","/Users/pro2015/development/react-TS/socialnetwork/src/components/Users/Users.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/MyPostsContainer.tsx",[],["167","168"],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/MyPosts.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileContainer.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/MyPosts/Post/Post.tsx",["169"],"import React from 'react';\nimport s from './Post.module.css';\nimport {PostType} from \"../../../../redux/profile-reducer\";\n\nexport const Post: React.FC<PostType> = (props) => {\n    return (\n        <div>\n            <div className={s.item}>\n                <img src={'https://i.pinimg.com/originals/51/f6/fb/51f6fb256629fc755b8870c801092942.png'}/>\n                {props.message}\n                <div>\n                    <span>like </span>{props.likeCount}\n                </div>\n            </div>\n        </div>\n    );\n}","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileInfo/ProfileInfo.tsx",["170"],"import React from 'react';\nimport s from './ProfileInfo.module.css';\nimport Preloader from \"../../common/Preloader/Preloader\";\nimport {ProfileType} from \"../../../redux/profile-reducer\";\nimport ProfileStatus from \"./ProfileStatus\";\n\ntype PropsType = {\n    profile: ProfileType\n    status: string\n    updateStatus: (status: string) => void\n}\n\n\nexport const ProfileInfo = (props: PropsType) => {\n    if (!props.profile){\n        return <Preloader/>\n    }\n    return (\n        <div>\n            <div className={s.imgBackground}>\n                <img src=\"https://html5css.ru/css/img_forest.jpg\" alt=\"\"/>\n            </div>\n            <div className={s.descriptionBlock}>\n                <img src={props.profile.photos.large ? props.profile.photos.large : \"\"}/>\n                <ProfileStatus status={props.status} updateStatus={props.updateStatus} />\n            </div>\n        </div>\n    );\n}","/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/Profile.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/reportWebVitals.ts",[],["171","172"],"/Users/pro2015/development/react-TS/socialnetwork/src/components/common/Preloader/Preloader.tsx",["173"],"import React from \"react\";\nimport preloader from \"../../../assets/images/loading.svg\";\n\n\nconst Preloader = () => {\n    return <div>\n        <img src={preloader}/>\n    </div>\n}\n\nexport default Preloader;","/Users/pro2015/development/react-TS/socialnetwork/src/components/Dialogs/DialogItem/DialogItem.tsx",["174"],"import React from 'react';\nimport {NavLink} from 'react-router-dom';\nimport s from '../Dialogs.module.css';\nimport {DialogType} from \"../../../redux/dialogs-reducer\";\n\nexport const DialogItem: React.FC<DialogType> = (props) => {\n    let path = \"/dialogs/\" + props.id;\n    return (\n        <div className={s.dialogItems + ' ' + s.active}>\n            <img src={props.ava}/>\n            <NavLink to={path}>{props.name}</NavLink>\n        </div>\n    )\n};\n","/Users/pro2015/development/react-TS/socialnetwork/src/redux/auth-reducer.ts",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Header/HeaderContainer.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/api/api.ts",[],"/Users/pro2015/development/react-TS/socialnetwork/src/HOC/withAuthRedirect.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Profile/ProfileInfo/ProfileStatus.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/Login/Login.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/components/common/FormsControls/FormsControls.tsx",[],"/Users/pro2015/development/react-TS/socialnetwork/src/utils/validators.ts",[],{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"179","severity":1,"message":"180","line":4,"column":24,"nodeType":"181","messageId":"182","endLine":4,"endColumn":34},{"ruleId":"179","severity":1,"message":"183","line":7,"column":9,"nodeType":"181","messageId":"182","endLine":7,"endColumn":16},{"ruleId":"179","severity":1,"message":"184","line":2,"column":8,"nodeType":"181","messageId":"182","endLine":2,"endColumn":9},{"ruleId":"185","severity":1,"message":"186","line":11,"column":19,"nodeType":"187","endLine":11,"endColumn":41},{"ruleId":"179","severity":1,"message":"183","line":4,"column":9,"nodeType":"181","messageId":"182","endLine":4,"endColumn":16},{"ruleId":"179","severity":1,"message":"188","line":22,"column":22,"nodeType":"181","messageId":"182","endLine":22,"endColumn":32},{"ruleId":"179","severity":1,"message":"189","line":1,"column":8,"nodeType":"181","messageId":"182","endLine":1,"endColumn":13},{"ruleId":"190","severity":1,"message":"191","line":88,"column":65,"nodeType":"192","messageId":"193","endLine":88,"endColumn":67},{"ruleId":"175","replacedBy":"194"},{"ruleId":"177","replacedBy":"195"},{"ruleId":"185","severity":1,"message":"186","line":9,"column":17,"nodeType":"187","endLine":9,"endColumn":108},{"ruleId":"185","severity":1,"message":"186","line":24,"column":17,"nodeType":"187","endLine":24,"endColumn":90},{"ruleId":"175","replacedBy":"196"},{"ruleId":"177","replacedBy":"197"},{"ruleId":"185","severity":1,"message":"186","line":7,"column":9,"nodeType":"187","endLine":7,"endColumn":31},{"ruleId":"185","severity":1,"message":"186","line":10,"column":13,"nodeType":"187","endLine":10,"endColumn":35},"no-native-reassign",["198"],"no-negated-in-lhs",["199"],"@typescript-eslint/no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","'Friends' is defined but never used.","'s' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ReturnType' is defined but never used.","'React' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected",["198"],["199"],["198"],["199"],"no-global-assign","no-unsafe-negation"]